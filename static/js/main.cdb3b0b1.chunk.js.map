{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api/api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","imgUrl","alt","title","description","MoviesList","movies","map","imdbId","getMovie","a","fetch","response","ok","Error","json","FindMovie","addMovie","useState","setMovie","query","setQuery","isValid","setValid","loadMovie","loadingMovie","Response","Title","Plot","Poster","imdbUrl","imdbID","htmlFor","type","id","placeholder","value","onChange","event","target","onClick","disabled","App","data","setMovies","newMovie","find","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cdb3b0b1.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.imgUrl}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{movie.title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {movie.description}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbId}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","const API_URL = 'https://www.omdbapi.com/?apikey=53395b51&';\n\nexport const getMovie = async (title: string) => {\n  const response = await fetch(`${API_URL}&t=${title}`);\n\n  if (!response.ok) {\n    throw new Error('Error of loading');\n  }\n\n  return response.json();\n};\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\nimport { getMovie } from '../../api/api';\n\ntype Props = {\n  addMovie: (newMovie: Movie) => void;\n};\n\nexport const FindMovie: React.FC<Props> = (props) => {\n  const { addMovie } = props;\n\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [query, setQuery] = useState('');\n  const [isValid, setValid] = useState(true);\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    setQuery(value);\n    setValid(true);\n  };\n\n  const loadMovie = async () => {\n    const loadingMovie = await getMovie(query);\n\n    if (loadingMovie.Response === 'False') {\n      setValid(false);\n      setMovie(null);\n\n      return;\n    }\n\n    setMovie({\n      title: loadingMovie.Title,\n      description: loadingMovie.Plot,\n      imgUrl: loadingMovie.Poster,\n      imdbUrl: `https://www.imdb.com/title/${loadingMovie.imdbID}/`,\n      imdbId: loadingMovie.imdbID,\n    });\n\n    setQuery('');\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-danger\"\n              value={query}\n              onChange={handleChange}\n            />\n          </div>\n\n          {isValid || (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={loadMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              disabled={!movie}\n              onClick={() => {\n                addMovie(movie as Movie);\n                setMovie(null);\n              }}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {movie && (\n          <MovieCard movie={movie} />\n        )}\n      </div>\n    </>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>(data);\n\n  const addMovie = (newMovie: Movie) => {\n    if (!movies.find(movie => movie.imdbId === newMovie.imdbId)) {\n      setMovies([newMovie, ...movies]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}